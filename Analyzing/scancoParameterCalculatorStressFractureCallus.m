function [out,outHeader] = scancoParameterCalculatorStressFractureCallus(bw,lowerThreshold,img,info)
%%bw is meant to be a mask covering only the cortical bone in the scan
%%bw2 is a mask representing the callus volume that is generated by
%%morpologically operating on a thresholded value after removing bw from
%%img

%%calculates:
%%TV of callus
%%BV of callus
%%callus ratio
%%TMD of cortical bone
%%TV of cortical bone spanning callus
%%MV of cortical bone spanning callus

% bw = permute(bw,[2,3,1]);
% img = permute(img,[2,3,1]);

%Find cortical bone volume
bw = imdilate(bw,strel('disk',3)); % Dilates the mask

corticalBV = length(find(bw)) * info.SliceThickness^3;
%find cortical medullary volume
bwFilled = false(size(bw));
[a b c] = size(bw);
for i = 1:c
    bwFilled(:,:,i) = imfill(bw(:,:,i),'holes');
end
bwMedullaryArea = bwFilled - bw; % Identify holes in the dilated mask
corticalMedullaryVolume = length(find(bwMedullaryArea)) * info.SliceThickness^3; % Calculate volume of holes

%Find estimated endosteal bone formation
img3 = img;
img3(~(bwFilled-bw)) = 0; % Isolates the parts of the image with holes
bwInterior = img3 > lowerThreshold; % Removes area below threshold, leaving edge of hole
callusInteriorBV = (length(find(bwInterior))) * info.SliceThickness^3; % Calculate volume
callusInteriorTV = length(find(imclose(bwInterior,strel('Disk',5,0)))) * info.SliceThickness^3; % Calculate volume after applying close
callusInteriorBVTV = callusInteriorBV / corticalMedullaryVolume; % Calculate volume ration
img2 = img;
img2(~imclose(bwInterior,strel('Disk',5,0))) = 0; % Leaves only the interior after close
callusInteriorDensity = calculateDensityFromDICOM(info,img2);
callusInteriorvBMD = mean(callusInteriorDensity(imclose(bwInterior,strel('Disk',5,0)))); % Gets average desnsity of interior

img2 = img;
img2(~bw) = 0; % Leaves only area inside mask
corticalDensity = calculateDensityFromDICOM(info,img2);
corticalTMD = mean(corticalDensity(bw));

img2 = img;
img2(bwFilled) = 0; % Leaves only area outside mask/holes
bw2 = img2 > lowerThreshold; % Identify area above threshold
callusBV = length(find(bw2)) * info.SliceThickness^3; % Calculates volume
bw2Whole = imopen(imclose(imclose(bw2,strel('disk',15,0)),true(5,5,5)),true(3,3,3)); % TODO-test this 
bw2Whole(bwFilled) = 0; % Leaves area outside mask/holes
callusTV = length(find(bw2Whole)) * info.SliceThickness^3; % Calculates volume
callusBVTV = callusBV/callusTV; % Calculates volume ratio
img2(~bw2Whole) = 0; % Removes image outside area
callusDensity = calculateDensityFromDICOM(info,img2); % Get image density
callusvBMD = mean(callusDensity(bw2Whole)); % Calculates average density
% Reorder dimensions for viewing
bw = permute(bw,[3,2,1]);
bw2Whole = permute(bw2Whole,[3,2,1]);

% Plot shapes of bw and bwWhole
shp = shpFromBW(bw,3);
h = figure;plot(shp,'LineStyle','none','FaceColor','w');hold on;
shp = shpFromBW(bw2Whole,3);
plot(shp,'LineStyle','none','FaceColor','r','FaceAlpha',0.4);
camlight();
hold off;

out = {callusTV,...
    callusBV,...
    callusBVTV,...
    callusvBMD,...
    callusInteriorTV,...
    callusInteriorBV,...
    callusInteriorBVTV,...
    callusInteriorvBMD,...
    corticalTMD,...
    corticalBV,...
    corticalMedullaryVolume,...
    info.SliceThickness,...
    lowerThreshold
    };
    
outHeader = {'File Location',...
    'Date Analyzed',...
    'Callus Total Volume (mm^3)',...
    'Callus Bone Volume(mm^3)',...
    'Callus Bone Volume Fraction',...
    'Callus Volumetric Bone Mineral Density (mgHa/ccm)',...
    'Endosteal Total Volume (mm^3)',...
    'Endosteal Bone Volume (mm^3)',...
    'Endosteal Volume Fraction',...
    'Endosteal Volumetric Bone Mineral Density (mgHa/ccm)',...
    'Cortical Tissue Mineral Density (mgHa/ccm)',...
    'Cortical Volume (mm^3)',...
    'Medullary Total Volume (mm^3)',...
    'Slice Thickness (mm)',...
    'Lower Threshold (native units)'...
    };
    

% D2 = bwdist(~bw2);
% [meanCallusThickness,stdCallusThickness] = calculateThickness(D2,0);
% 
% 
% %do background structure
% bwNotFilled = bwFilled;
% bwNotFilled(bw) = 0;
% bwUlt = bwulterode(bwNotFilled);
% rads = D1(find(bwUlt));%find the radii of the spheres at the local maxima
% [r c v] = ind2sub(size(bwUlt),find(bwUlt));
% % xyzUlt = [r c v];%find xyz coords of the local maxima
% % xyzUlt = xyzUlt .* info.SliceThickness;%convert to physical units
% diams = 2 * rads .* info.SliceThickness;%convert to diameters and in physical units
% 
% TbSp = mean(diams);%mean structure thickness
% TbSpSTD = std(diams);%standard deviation of structure thicknesses
% 
% TN = 1/TbSp;
% 
% %find TMD and vBMD
% if isfield(info,'Private_0029_1004')
%     [densityMatrix junk] = calculateDensityFromDICOM(info,img);
%     clear junk;
%     TMD = mean(densityMatrix(find(bw)));
%     vBMD = mean(densityMatrix(find(bwFilled)));
% else
%     TMD = 0;
%     vBMD = 0;
% end
% 
% % %do SMI as 6 * (BV * (dS/dr))/BS^2
% % dr = 0.000001;
% % shp = shpFromBW(bw);
% % faces = shp.boundaryFacets;
% % vertices = shp.Points;
% % % figure;
% % % plot(shp)
% % % %     'repairing'
% % % [vertices faces] = meshcheckrepair(vertices,faces,'meshfix');
% % %     'unifying'
% % % faces = meshreorient(vertices,faces);
% % % close all
% % %     'calculating vertex normals'
% % vertexNormals = vertexNormal2(vertices,faces);%calculate vertex normals for expansion
% % newVertices = vertices + dr*vertexNormals;%generate new vertex locations for different mesh
% % BS = meshSurfaceArea(vertices,faces);
% % dS = meshSurfaceArea(newVertices,faces);
% % dS = abs(BS - dS);
% SMI = 0;%(6 * BV * (dS/dr)) / BS^2;
% 
% cc = bwconncomp(bw);
% numPixels = cellfun(@numel,cc.PixelIdxList);
% [biggest,idx] = max(numPixels);
% bw = false(size(bw));
% bw(cc.PixelIdxList{idx}) = true;
%                     
% [connectivity label] = imEuler3d(bw,26);%calculate Euler characteristic of foreground structure
% ConnD = (1-connectivity) / TV;
